on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"

env:
  PORT: 8080

jobs:

  build:
    if: ${{ !startsWith(github.event.head_commit.message, '[Skip CI]') }}
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: 14.x
      - run: make install
      - run: make build
    runs-on: ubuntu-latest

  lint:
    steps:
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.2
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - run: terraform version
      - run: terraform fmt -check -recursive $GITHUB_WORKSPACE/.ci/terraform
    runs-on: ubuntu-latest

  unit-tests:
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: 14.x
      - run: make install
      - run: npx jest --version
      - run: npx jest --ci --collect-coverage src/
    runs-on: ubuntu-latest

  deploy-staging:
    needs:
      - build
      - unit-tests
    environment:
      name: starscream
      url: https://starscream.herokuapp.com/
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: starscream
          heroku_email: mail@ashenm.dev
          dontautocreate: true
    runs-on: ubuntu-latest

  e2e:
    needs:
      - build
      - unit-tests
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: 14.x
      - run: make install
      - run: make run & sleep 5s
      - run: make assess
    runs-on: ubuntu-latest

  slack:
    needs:
      - e2e
      - lint
      - deploy-staging
    if: ${{ always() }}
    steps:
      - uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          channel: "#github"
          name: "GitHub Workflow"
    runs-on: ubuntu-latest

# vim: set expandtab shiftwidth=2 syntax=yaml:
